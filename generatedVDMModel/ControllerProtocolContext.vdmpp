class ControllerProtocolContext
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	javaObject: generated_vdm_VDMControllerProtocolContext := new generated_vdm_VDMControllerProtocolContext();

	generatedChallenge: seq of int := [];
	pendingPublicKey: seq of char := [];
	pendingPrivateKey: seq of char := [];
operations
public setJavaObject: (seq of char) ==> ()
setJavaObject(vdmObjectName) == javaObject.setJavaObject(vdmObjectName);

public GENERATED_GenerateChallenge:() ==> (seq of int)
GENERATED_GenerateChallenge() == (
	--Extra VDM expressions can be added to this operation
	generatedChallenge := javaObject.GenerateChallenge();
	return generatedChallenge;
);

public GENERATED_EncryptChallenge:(seq of int) ==> (seq of int)
GENERATED_EncryptChallenge(challenge) == (
	--Extra VDM expressions can be added to this operation
	javaObject.EncryptChallenge(challenge);
) pre generatedChallenge = challenge;

public GENERATED_CheckChallengeAnswer:(seq of int) ==> (bool)
GENERATED_CheckChallengeAnswer(challengeAnswer) == (
	--Extra VDM expressions can be added to this operation
	javaObject.CheckChallengeAnswer(challengeAnswer);
) pre challengeAnswer = generatedChallenge;

public GENERATED_CheckKeyVaultCertificate:(seq of char) ==> (bool)
GENERATED_CheckKeyVaultCertificate(certificateString) == (
	--Extra VDM expressions can be added to this operation
	javaObject.CheckKeyVaultCertificate(certificateString);
);

public GENERATED_DecryptChallenge:(seq of char) ==> (seq of char)
GENERATED_DecryptChallenge(encryptedChallenge) == (
	--Extra VDM expressions can be added to this operation
	javaObject.DecryptChallenge(encryptedChallenge);
);

public GENERATED_GetEffectivePendingPublicKey:() ==> (seq of char)
GENERATED_GetEffectivePendingPublicKey() == (
	--Extra VDM expressions can be added to this operation
	pendingPublicKey := javaObject.GetEffectivePendingPublicKey();
	return pendingPublicKey;
);

public GENERATED_GetEffectivePendingPrivateKey:() ==> (seq of char)
GENERATED_GetEffectivePendingPrivateKey() == (
	--Extra VDM expressions can be added to this operation
	pendingPrivateKey := javaObject.GetEffectivePendingPrivateKey();
	return pendingPrivateKey;
);

functions
-- TODO Define functions here
traces
-- TODO Define Combinatorial Test Traces here
end ControllerProtocolContext